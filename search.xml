<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>本地hexo博客部署到服务器</title>
    <url>/2020/07/11/%E6%9C%AC%E5%9C%B0hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/5fddc6d846ac820bd374c9e08366ef94.jpg" alt="">本篇内容用来讲述如何将 hexo 博客部署到阿里云的服务器上。<a id="more"></a><br>只要通过三步即可成功部署：</p>
<ul>
<li>云服务器端 git 的配置</li>
<li>Nginx 的配置</li>
<li>本地端 hexo 的设置更改</li>
</ul>
<h2 id="进入云服务器中"><a href="#进入云服务器中" class="headerlink" title="进入云服务器中"></a>进入云服务器中</h2><p>可以通过各大云服务器官网进入，或者通过Xshell6软件进入。</p>
<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711161804.png" alt=""></p>
<h2 id="云服务器端配置-git"><a href="#云服务器端配置-git" class="headerlink" title="云服务器端配置 git"></a>云服务器端配置 git</h2><p><strong>安装依赖库和编译工具</strong></p>
<p>1.安装依赖库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br></pre></td></tr></table></figure>

<p>2.安装编译工具</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install gcc perl-ExtUtils-MakeMaker package</span><br></pre></td></tr></table></figure>

<p><strong>下载 git</strong></p>
<p>1.选择一个目录来存放下载下来的 git 安装包。这里选择了<strong>/usr/local/src</strong> 目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br></pre></td></tr></table></figure>

<p>2.官网找一个新版稳定的源码包下载到 <strong>/usr/local/src</strong>文件夹里</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.kernel.org/pub/software/scm/git/git-2.16.2.tar.gz</span><br></pre></td></tr></table></figure>

<p><strong>解压编译git</strong><br>1.在当前目录下解压 <strong>git-2.16.2.tar.gz</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zvxf</span> <span class="selector-tag">git-2</span><span class="selector-class">.16</span><span class="selector-class">.2</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure>

<p>2.进入 <strong>git-2.16.2.tar.gz</strong> 目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> git-2.16.2</span><br></pre></td></tr></table></figure>

<p>3.执行编译</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make all prefix=/usr/<span class="built_in">local</span>/git</span><br></pre></td></tr></table></figure>

<p>4.安装 git 到 <strong>/usr/local/git</strong> 目录下</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="built_in">make</span> install prefix=/usr/<span class="keyword">local</span>/git</span><br></pre></td></tr></table></figure>

<p><strong>配置 git 环境变量</strong></p>
<p>1.将 git 加入 <strong>PATH</strong> 目录中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=$PATH:/usr/local/git/bin'</span> &gt;&gt; /etc/bashrc</span><br></pre></td></tr></table></figure>

<p>2.使 git 环境变量生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure>

<p>3.查看git版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>

<p><img src="C:%5CUsers%5CTangXiaoYan%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200711163149062.png" alt="image-20200711163149062"></p>
<p>如果此时能查看到 git 的版本号，说明我们已经安装成功了</p>
<p>创建 git 仓库，用于存放博客网站资源<br>1.在 <strong>home/git</strong> 的目录下，创建一个名为<strong>hexoBlog</strong>的裸仓库（bare repo）。<br>如果没有 <strong>home/git</strong> 目录，需要先创建；然后修改目录的所有权和用户权限。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /home/git/</span><br><span class="line"></span><br><span class="line">chown -R <span class="variable">$USER</span>:<span class="variable">$USER</span> /home/git/</span><br><span class="line"></span><br><span class="line">chmod -R 755 /home/git/</span><br></pre></td></tr></table></figure>

<p>2.然后，执行如下命令.这一步主要创建一个裸的 git 仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/</span><br><span class="line"></span><br><span class="line">git init --bare hexoBlog.git</span><br></pre></td></tr></table></figure>

<p><strong>创建一个新的 git 钩子，用于自动部署</strong></p>
<p>1.在 <strong>/home/git/hexoBlog.git</strong> 下，有一个自动生成的 <strong>hooks</strong> 文件夹。我们需要在里边新建一个新的钩子文件 <strong>post-receive</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /home/git/hexoBlog.git/hooks/post-receive</span><br></pre></td></tr></table></figure>

<p>2.按 <strong>i</strong> 键进入文件的编辑模式，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录（配置文件等）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --work-tree=/home/hexoBlog --git-dir=/home/git/hexoBlog.git checkout -f</span><br></pre></td></tr></table></figure>

<p>3.然后，按 <strong>Esc</strong> 键退出编辑模式，输入<strong>:wq</strong> 保存退出。</p>
<p>4.修改文件权限，使得其可执行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod +x /home/git/hexoBlog.git/hooks/post-receive</span><br></pre></td></tr></table></figure>

<p>到这里，我们的 git 仓库算是完全搭建好了。下面进行 Nginx 的配置。</p>
<h2 id="云服务器端配置-Nginx"><a href="#云服务器端配置-Nginx" class="headerlink" title="云服务器端配置 Nginx"></a>云服务器端配置 Nginx</h2><p>1.安装 <strong>Nginx</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure>

<p>2.启动 <strong>Nginx</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service nginx start</span><br></pre></td></tr></table></figure>

<p>3.测试网页是否能打开.在浏览器中输入服务器 ip 地址，就是服务器的公网 ip。</p>
<p>4.配置 Nginx 托管文件目录</p>
<ul>
<li>创建 /home/hexoBlog目录，用于 Nginx 托管。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /home/hexoBlog/</span><br><span class="line">   </span><br><span class="line">   chown -R <span class="variable">$USER</span>:<span class="variable">$USER</span> /home/hexoBlog/</span><br><span class="line">   </span><br><span class="line">   chmod -R 755 /home/hexoBlog/</span><br></pre></td></tr></table></figure>

<ul>
<li>查看 Nginx 的默认配置的安装位置</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure>

<ul>
<li>修改Nginx的默认配置</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>

<ul>
<li><p>按方向键，找到如下位置</p>
<pre><code>server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /home/hexoBlog;    #需要修改

    server_name www.bujige.net; #需要修改

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;
    location / {
    }
    error_page 404 /404.html;
        location = /40x.html {
    }</code></pre><p>  }<br><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711164315.png" alt=""></p>
</li>
</ul>
<p>按i键进入插入模式，将其中的 root 值改为<strong>/home/hexoBlog</strong>（刚才创建的托管仓库目录）。<br>将<strong>server_name</strong>值改成你的域名</p>
<p>5.重启 Nginx 服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure>

<p>至此，服务器端配置就结束了。接下来，就剩下本地 hexo 的配置更改了。</p>
<h2 id="修改-hexo-站点配置文件-git-相关设置"><a href="#修改-hexo-站点配置文件-git-相关设置" class="headerlink" title="修改 hexo 站点配置文件 git 相关设置"></a>修改 hexo 站点配置文件 git 相关设置</h2><p>1.打开你本地的 hexo 博客所在文件，打开站点配置文件（不是主题配置文件），做以下修改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    <span class="built_in">type</span>: git</span><br><span class="line">    repo: root@你的云服务器的IP地址:/home/git/hexoBlog</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure>

<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711164659.png" alt=""></p>
<p>2.打开cmd，在 hexo 目录下执行部署。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

<p>3.在地址栏输入打开你的公网 IP，看是不是已经部署成功了</p>
<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711165007.png" alt=""></p>
]]></content>
  </entry>
  <entry>
    <title>我的世界Linux开服环境搭建</title>
    <url>/2020/06/28/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8CMCSM%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711132031.png" alt=""></p>
<p>现在个人服务器价格以及基本进入大众可消费的水平，不是只有需要架设网站的用户才有服务器需求。我们也也可以来做很多事情，比如说搭建一个Minecraft的服务器，让我们可以很方便的与小伙伴联机，这篇主要就来通过Linux以及MCSM面板教大家搭建一个Minecraft服务器。</p>
<p><font color=#FF0000 >喜欢或者有问题的同学，可以在下发评论留言哦！</font><a id="more"></a></p>
<h3 id="MCSM面板搭建意义"><a href="#MCSM面板搭建意义" class="headerlink" title="MCSM面板搭建意义"></a>MCSM面板搭建意义</h3><p>1.方便管理服务器，关闭我的世界服务器以及上传和卸载插件都不用登录服务器执行命令，对新手服主非常友好。</p>
<p>2.可以实时监控服务器状态，如剩余内存，CPU占用率等…</p>
<h3 id="前期的准备工作"><a href="#前期的准备工作" class="headerlink" title="前期的准备工作"></a>前期的准备工作</h3><p>1.需要一台服务器，以及安装好Linux系统。    (本教程使用阿里云的学生机，系统使用CentOS7.4)</p>
<p>2.远程SSH的控制软件。    （本教程使用 Xshell）</p>
<p>3.我的世界服务器核心。    （本教程使用 KCauldron 1.7.10-1614）</p>
<p>4.FTP软件,用于上传Minecratf服务器核心到服务器。    (本教程使用Xftp)</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1.推荐使用CentOS系统或者RedHat系统，其他Linux系统理论也能实现，但是命令可能有细微变化，所以本教程不推荐使用。</p>
<p>2.如果部署失败请耐心重新再次开始，大家都是这样过来的。</p>
<p>3.本教程不适用小白，如果不会使用SSH工具、安装服务器系统，建议老老实实去淘宝买别人搭建好的。</p>
<h3 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h3><h4 id="系统更新"><a href="#系统更新" class="headerlink" title="系统更新"></a>系统更新</h4><p>确保你的Linux系统是最新的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure>

<h4 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h4><p>1.安装<code>github</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install git -y</span><br></pre></td></tr></table></figure>

<p>2.安装<code>node.js</code>管理器等组件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/creationix/nvm.git ~/nvm</span><br><span class="line"><span class="comment"># 设置nvm 自动运行</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"source ~/nvm/nvm.sh"</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="comment"># 查询node.js的版本</span></span><br><span class="line">nvm list-remote</span><br><span class="line"><span class="comment"># 安装node.js，目前最新版本为v14.4.0</span></span><br><span class="line">nvm install v14.4.0</span><br></pre></td></tr></table></figure>

<p>3.安装结束之后，请重启服务器（重要！）</p>
<h4 id="安装Java8"><a href="#安装Java8" class="headerlink" title="安装Java8"></a>安装Java8</h4><p>使用<code>yum</code>安装<code>java8</code>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装java8</span></span><br><span class="line">yum install -y java</span><br><span class="line"><span class="comment">#查看java版本</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>

<p>没有报错，成功回显版本号则安装Java成功</p>
<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711163245.png" alt=""></p>
<h4 id="安装MCSM"><a href="#安装MCSM" class="headerlink" title="安装MCSM"></a>安装MCSM</h4><p>克隆<strong>MCSManager</strong>并安装依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 克隆目录</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/suwings/mcsmanager.git</span><br><span class="line"><span class="comment"># cd至目录</span></span><br><span class="line"><span class="built_in">cd</span> mcsmanager/</span><br><span class="line"><span class="comment"># 安装依赖库</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 启动面板</span></span><br><span class="line">npm start</span><br></pre></td></tr></table></figure>

<p>启动成功效果图</p>
<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711134158.png" alt=""></p>
<h4 id="保持后台运行"><a href="#保持后台运行" class="headerlink" title="保持后台运行"></a>保持后台运行</h4><p>先<code>Ctrl+C</code>关闭面板，我们使用<code>screen</code>软件来让面板保持后台运行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装screen</span></span><br><span class="line">yum install screen -y</span><br><span class="line"><span class="comment"># 创建一个名为 mcsm 的窗口</span></span><br><span class="line">screen -S mcsm</span><br><span class="line"><span class="comment"># 在此新终端窗口内启动面板</span></span><br><span class="line">npm start</span><br></pre></td></tr></table></figure>

<p>开启后可以直接与终端断开连接，面板讲保持后台运行。</p>
<p><strong>若要重新控制，请输入命令即可：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -r mcsm</span><br></pre></td></tr></table></figure>

<h3 id="端口开放"><a href="#端口开放" class="headerlink" title="端口开放"></a>端口开放</h3><p>面板需要 23333（主功能） 端口与 20010 - 20200（FTP功能）端口区间。</p>
<p>Minecraft需要开放25565（我的世界默认）端口号。</p>
<p>如果你使用阿里云，腾讯云或者服务商，<strong>请进入控制台到防火墙安全组策略，放行以上端口。</strong></p>
<h3 id="登录MCSM账户"><a href="#登录MCSM账户" class="headerlink" title="登录MCSM账户"></a>登录MCSM账户</h3><p>现在，访问 http://你的公网IP:23333/ 即可进入面板。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 开头带“#”为最高管理员权限（注意，管理员与管理员之间账号可互删）不带“#”为用户账户</span><br><span class="line">默认账号：#master</span><br><span class="line">默认密码: 123456</span><br></pre></td></tr></table></figure>

<p>请及时修改密码。管理员可以互删。</p>
<h3 id="FTP服务"><a href="#FTP服务" class="headerlink" title="FTP服务"></a>FTP服务</h3><p>需要使用FTP协议上传服务器核心到服务器上。</p>
<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711134440.png" alt=""></p>
<h3 id="MCSM面板使用"><a href="#MCSM面板使用" class="headerlink" title="MCSM面板使用"></a>MCSM面板使用</h3><p>1.创建实例，这里使用快速创建</p>
<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711135100.png" alt=""></p>
<p>2.根据提示设置好参数。</p>
<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711135012.png" alt="[]()"></p>
<h3 id="开启Minecraft服务器"><a href="#开启Minecraft服务器" class="headerlink" title="开启Minecraft服务器"></a>开启Minecraft服务器</h3><h4 id="EULA最终用户协议"><a href="#EULA最终用户协议" class="headerlink" title="EULA最终用户协议"></a>EULA最终用户协议</h4><p>第一次开服一定失败，返回你的<code>服务器根目录</code>,你会发现多了一个叫做eula.txt的文件，编辑它把 eula=false 改成 eula=true 就行了，这是EULA最终用户许克协议。</p>
<p><strong>但是</strong>我希望所有服主可以看一看<code>EULA</code></p>
<p>Minecraft EULA：<a href="https://account.mojang.com/documents/minecraft_eula" target="_blank" rel="noopener">官方汉化链接</a></p>
<p><strong>以下两条比较重要 我更换了代词方便大家理解</strong></p>
<ul>
<li><p>不得将Mojang创建的任何内容用于商业用途；</p>
</li>
<li><p>不得试图通过Mojang创建的任何内容赚钱；</p>
</li>
</ul>
<p>这意味着你几乎和开公益服没有区别，但是我们关起门来说话，违反<code>eula</code>的服务器与服主 全世界比比皆是</p>
<p>这<strong>不代表</strong>你可以认为 你可以光明正大地开商业化服务器</p>
<p>但在这种大环境下 我相信可怜的绝大部分人 做不到 不违反<code>eula</code></p>
<p>所以 请你们抱着<strong>内疚，悔恨</strong>的心理 看待你开了违反<code>eula</code>的服务器这一事实</p>
<p>刚刚气氛好沉重啊 让我们回归主题，继续把服务器开起来吧！</p>
<h4 id="关闭正版验证"><a href="#关闭正版验证" class="headerlink" title="关闭正版验证"></a>关闭正版验证</h4><p>返回你的<code>服务器根目录</code>找到server.properties这个文件，编辑它，更改 online-mode=true 为online-mode=false</p>
<p><strong>不关这个正版验证 如果你不是正版玩家你是进不去服务器的</strong></p>
<p>当然，Mojang已经说过了，如果你现在买不起Minecraft，可以先玩，以后有能力了再来补票。</p>
<p><strong>注意：</strong>正版玩家和盗版玩家是没有区别的！但我还是希望每个热爱这款游戏，有能力的玩家都可以去支持一下正版。</p>
<p><strong>做了以上两步操作就可以通过面板开启服务器了</strong></p>
<h3 id="进入Minecraft服务器"><a href="#进入Minecraft服务器" class="headerlink" title="进入Minecraft服务器"></a>进入Minecraft服务器</h3><p>插一嘴，我建议使用<code>HMCL</code>启动器</p>
<p>官网链接：<a href="https://hmcl.huangyuhui.net/download" target="_blank" rel="noopener">HMCL启动器</a></p>
<p>进入游戏之后选择多人游戏，然后添加服务器，服务器地址可以写ip或者域名。</p>
<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711140416.png" alt=""></p>
<p>添加之后可以看到服务器已经开启，我们双击进入。</p>
<p><img src="https://tangxiaoyan.oss-cn-hangzhou.aliyuncs.com/tuchuang/20200711140441.png" alt=""></p>
<p>好的，我们的服务器就这样开起来了，是不是觉得很简单呢。</p>
]]></content>
      <categories>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
